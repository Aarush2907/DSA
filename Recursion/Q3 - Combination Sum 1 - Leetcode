Approach - Recursion

Code :

class Solution {
private: 
    void CS(int index , vector<vector<int>> &ans , vector<int>& ds , vector<int> &candidates , int target){
        if(index >= candidates.size()){
            if(target == 0){
                ans.push_back(ds);

            }
            return;
        }

        if(candidates[index] <= target){
            ds.push_back(candidates[index]);

            CS(index , ans , ds, candidates , target - candidates[index]);

            ds.pop_back();
        }

        CS(index + 1 , ans , ds, candidates , target );
    }
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> ds;
        int index = 0;

        CS(index , ans , ds, candidates , target);
        return ans;
    }
};
