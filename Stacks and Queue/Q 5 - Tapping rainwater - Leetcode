https://leetcode.com/problems/trapping-rain-water/description/

Code 1 :- 
Brute Force :
class Solution {
public:
    int trap(vector<int>& height) {
        int watertrapped = 0;
        int n = height.size();

        for(int i = 0 ; i <  n ; i++){
            int leftmax = 0;
            int rightmax = 0;

            int j = i;
            while(j>=0){
                leftmax = max(leftmax , height[j]);
                j--;
            }

            j = i;

            while(j < n){
                rightmax = max(rightmax , height[j]);
                j++;
            }

            watertrapped += min(leftmax , rightmax) - height[i];
        }
        return watertrapped;
    }
};

Better : 
class Solution {
public:
    int trap(vector<int>& height) {
        int watertrapped = 0;
        int n = height.size();
        int prefix[n], suffix[n];
  prefix[0] = height[0];
  for (int i = 1; i < n; i++) {
    prefix[i] = max(prefix[i - 1], height[i]);
  }
  suffix[n - 1] = height[n - 1];
  for (int i = n - 2; i >= 0; i--) {
    suffix[i] = max(suffix[i + 1], height[i]);
  }

        for(int i = 0 ; i <  n ; i++){
           
            watertrapped += min(prefix[i] , suffix[i]) - height[i];
        }
        return watertrapped;
    }
};

Best : 
//Two Pointers
