https://www.geeksforgeeks.org/problems/given-a-linked-list-of-0s-1s-and-2s-sort-it/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=given-a-linked-list-of-0s-1s-and-2s-sort-it

Code :
//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;
/* Link list Node */
struct Node {
    int data;
    struct Node *next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

struct Node *start = NULL;


// } Driver Code Ends
/*
 
  Node is defined as
  struct Node {
    int data;
    struct Node *next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

*/
class Solution
{
    public:
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) {
        
        Node* zeroHead = new Node(-1);
        Node* zeroTail = zeroHead;
        Node* oneHead = new Node(-1);
        Node* oneTail = oneHead;
        Node* twoHead = new Node(-1);
        Node* twoTail = twoHead;
        
        Node* temp = head;
        
        while(temp != NULL){
            if(temp->data == 0){
                zeroTail->next = new Node(0);
                zeroTail = zeroTail->next;
            }
            
            else if(temp -> data == 1){
                oneTail -> next = new Node(1);
                oneTail = oneTail->next;
            }
            
            else {
                twoTail -> next = new Node(2);
                twoTail = twoTail->next;
            }
            temp = temp->next;
        }
        
        
        Node* newHead = new Node(-1);
        Node* newTail = newHead;
        
        zeroHead = zeroHead->next;
        
        while(zeroHead != NULL){
            newTail -> next = zeroHead;
            newTail = newTail->next;
            zeroHead = zeroHead->next;
        }
        
        oneHead = oneHead->next;
        
        while(oneHead != NULL){
            newTail -> next = oneHead;
            newTail = newTail->next;
            oneHead = oneHead->next;
        }
        
        twoHead = twoHead->next;
        
        while(twoHead != NULL){
            newTail -> next = twoHead;
            newTail = newTail->next;
            twoHead = twoHead->next;
        }
        
        return newHead->next;
        
    }
};


//{ Driver Code Starts.

// Function to sort a linked list of 0s, 1s and 2s
void printList(struct Node *Node) {
    while (Node != NULL) {
        printf("%d ", Node->data);
        Node = Node->next;
    }
    printf("\n");
}

/* Drier program to test above function*/
void insert(int n1) {
    int n, value, i;
    // scanf("%d",&n);
    n = n1;
    struct Node *temp;
    for (i = 0; i < n; i++) {
        scanf("%d", &value);

        if (i == 0) {
            start = new Node(value);
            temp = start;
            continue;
        } else {
            temp->next = new Node(value);
            temp = temp->next;
            temp->next = NULL;
        }
    }
}

int main() {

    int n;

    int t;
    scanf("%d", &t);

    while (t--) {
        scanf("%d", &n);

        insert(n);
        Solution ob;
        struct Node *newHead = ob.segregate(start);
        printList(newHead);
    }

    return 0;
}
// } Driver Code Ends
